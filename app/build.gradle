apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'


// Manifest version information!
def versionMajor = 1
def versionMinor = 0
def versionPatch = 0
def versionBuild = 0 // bump for dogfood builds, public betas, etc.


def gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
def gitTimestamp = 'git log -n 1 --format=%at'.execute([], rootDir).text.trim()

def packagename = "cz.josefadamcik.trackontrakt"

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "${packagename}"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true

        buildConfigField 'String', 'GIT_SHA', "\"${gitSha}\""
        buildConfigField 'long', 'GIT_TIMESTAMP', "${gitTimestamp}"

        buildConfigField "String", "TRAKT_CLIENT_ID", "\"591b0ee4f99a3b168208dd0feafaa28f227e5403670fefe15c9bfaa86a26ada2\""
        buildConfigField "String", "TRAKT_CLIENT_SECRET", "\"b2ee3a2adc7a4ec1f401f53dee9b5c6d6552b052184b22ed5a4c579e98fcd4ee\""
        buildConfigField "String", "TRAKT_OAUTH_REDIRECT_URL", "\"tot://authorized\""
        buildConfigField "String", "TRAKT_BASE_API_URL", "\"https://api.trakt.tv\""


    }

    buildTypes {
        debug {
            applicationIdSuffix '.dev'
            versionNameSuffix '-dev'
            debuggable true
            //signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), file('proguard-rules.pro')
            //signingConfig signingConfigs.release
        }
    }

    productFlavors {
        internal {
            applicationId "${packagename}.internal"

        }
        production {
            applicationId "${packagename}"
        }
    }

//    lintOptions {
//        textReport true
//        textOutput 'stdout'
//        warning 'InvalidPackage'
//        warning 'ResourceType' //TODO remove eventually with ButterKnife 8.0 release
//    }

//    compileOptions {
//        sourceCompatibility JavaVersion.VERSION_1_8
//        targetCompatibility JavaVersion.VERSION_1_8
//    }
}

// TODO remove eventually: http://b.android.com/162285
configurations {
    internalDebugCompile
}

configurations.all {
    resolutionStrategy {
        force "com.android.support:support-annotations:$rootProject.ext.supportLibraryVersion"
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    testCompile 'junit:junit:4.12'
    testCompile 'org.hamcrest:hamcrest-library:1.3'

    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile 'com.android.support.test:rules:0.5'
    //androidTestCompile 'com.android.support.test.uiautomator:uiautomator-v18:2.1.2'

    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    //support, design, etc
    compile "com.android.support:appcompat-v7:$rootProject.ext.supportLibraryVersion"
    compile "com.android.support:recyclerview-v7:$rootProject.ext.supportLibraryVersion"
    compile "com.android.support:cardview-v7:$rootProject.ext.supportLibraryVersion"
    compile "com.android.support:design:$rootProject.ext.supportLibraryVersion"
    compile "com.android.support:support-vector-drawable:$rootProject.ext.supportLibraryVersion"
    compile "com.android.support:animated-vector-drawable:$rootProject.ext.supportLibraryVersion"
    compile 'com.android.support.constraint:constraint-layout:1.0.1'

//    internalCompile 'com.squareup.leakcanary:leakcanary-android:1.3.1'
//    productionCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1'

    //basic utils
    compile 'com.jakewharton.timber:timber:4.5.1'

    //dagger 2
    compile 'com.google.dagger:dagger:2.9'
    kapt 'com.google.dagger:dagger-compiler:2.9'
//    annotationProcessor 'com.google.dagger:dagger-compiler:2.9'
    provided 'org.glassfish:javax.annotation:10.0-b28'

    //rx
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    compile 'io.reactivex.rxjava2:rxkotlin:2.0.0-RC3'

    //api, networking
    compile 'com.squareup.okhttp3:okhttp:3.6.0'
    compile "com.squareup.retrofit2:retrofit:2.2.0"
    compile "com.squareup.retrofit2:converter-moshi:2.2.0"
    compile 'com.squareup.retrofit2:adapter-rxjava2:2.2.0'




}
repositories {
    mavenCentral()
}

// change apk name
android.applicationVariants.all { variant ->
    for (output in variant.outputs) {
        def outputFile = output.outputFile
        if (outputFile != null && outputFile.name.endsWith('.apk')) {
            def fileName = "trackontrakt-${output.name}.apk"
            output.outputFile = new File(outputFile.parent, fileName)
        }
    }
}

// print build finish time
gradle.buildFinished { buildResult ->
    def buildFinishDate = new Date()
    def formattedDate = buildFinishDate.format('yyyy-MM-dd HH:mm:ss')
    println "Build finished: ${formattedDate}"
}